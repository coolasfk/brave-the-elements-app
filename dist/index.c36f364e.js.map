{"mappings":"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","sources":["index.js"],"sourcesContent":["const hamburger = document.querySelector(\".hamburger--collapse\");\n\nconst btn = document.querySelector(\".input__button\");\nconst thanks = document.querySelector(\".input__thank-you\");\n\nbtn.addEventListener(\"click\", () => {\n  btn.style.display = \"none\";\n  thanks.style.display = \"flex\";\n  thanks.style.opacity = 1;\n\n  setTimeout(() => {\n    btn.style.display = \"flex\";\n    thanks.style.display = \"none\";\n    thanks.style.opacity = 0;\n  }, 4000);\n});\n\nhamburger.addEventListener(\"click\", () => {\n  hamburger.classList.toggle(\"is-active\");\n});\n\nconst weatherDescription = document.querySelector(\".weather-description\");\nconst weatherTemp = document.querySelector(\".icon-wrapper__temp\");\nconst weatherIcon = document.querySelector(\".icon-wrapper__icon\");\n\nfunction success() {\n  console.log(\"success\");\n}\n\nfunction error() {\n  console.log(\"error\");\n}\nfunction addWeather(position) {\n  (weatherDescription.textContent = `The weather today in ${position.name} is:  \\r\\n ${position.weather[0].description}`),\n    // (a = `${position.main.temp}`),\n    // (b = Math.round(a - 273.15)),\n    (temp = Math.round(position.main.temp)),\n    (weatherTemp.textContent = `${temp}Â°C`),\n    console.log(position),\n    (weatherIcon.src = `http://openweathermap.org/img/wn/${position.weather[0].icon}@2x.png`);\n}\n// function convertK(kelvin) =>\n\nlet getWeather = navigator.geolocation.getCurrentPosition((position) => {\n  let lat = position.coords.latitude;\n  let lon = position.coords.longitude;\n\n  fetch(\n    `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=98cf5456a9a3e919f85b22a378be2b52&units=metric`,\n  )\n    .then((response) => response.json())\n    .then((position) => {\n      addWeather(position);\n    })\n    .catch((error) => console.log(error));\n});\n\nconst logo = document.querySelectorAll(\".logo\");\nconsole.log(logo);\n\nlogo.style.border = \"4px red solid\";\n"],"names":[],"version":3,"file":"index.c36f364e.js.map","sourceRoot":"/__parcel_source_root/"}